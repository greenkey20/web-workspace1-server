<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd" id="WebApp_ID" version="3.1">
<!--2021.12.29(수) 12h20-->
<!--위 날짜 주석을 1행에 두었더니, 서버 실행 + welcome page 불러올 때 404 에러(요청된 리소스 '/1_Servlet/WEB-INF/web.xml은 가용하지 않습니다' 발생-->
<!--web.xml 파일 = 배포 서술자(DD, deployment descriptor)
	xml = extensible(확장) mark-up language -> 마크업 언어의 일종 -> html 문서처럼 생김
	해당 웹 어플리케이션의 기본적인 전체 (환경)설정을 위해 작성하는 파일/설정 정보를 가지고 있는 파일
	서버 실행과 동시에 main page를 지정해줌 <- 해당 웹 어플리케이션을 구동시키는 서버가 start 시 제일 먼저 읽혀지는 파일 cf. Java 프로그램 실행 시 entry point = main() 메소드
	개발자가 web.xml 파일을 수정하지 않고도 개발 및 운영이 가능하지만, 규모가 커지고 다양한 API들을 사용하게 되면 직접 수정해야 하는 경우도 생김-->

  <display-name>1_Servlet</display-name>
  
  <!--welcome-file: 처음에 url로 해당 이 어플리케이션 루트(root, 뿌리 -> 시작점) 요청 시 제일 처음 보여지게 되는 main page를 지정해놓는 것
  
  	  dynamic web project 새로 만들 때 context root = 이 어플리케이션만의 고유한 별칭; 어떤 프로젝트로 만들었는지 사용자들이 알면 안 되므로, 원래는 재정의 필수
  	  
  	  http://구동 중인 서버의 ip주소(pc/컴퓨터마다 가지고 있는 주소):포트 번호(포트 번호 따로 안 적으면 기본적으로 80(웹서비스) 포트로 감)/
  	  e.g. 현재 이 어플리케이션의 경우  아래 url을  주소창에 입력해서 감 -> welcome-file-list에 있는 문서(실제 있는 것은 아니고, 내가 하나 골라서 그 이름으로 만들면/쓰면 됨)가 제일 처음에 보여짐; 단, welcome-file에 존재하는 파일명들이 반드시 WebContent 폴더 안에 위치해야만 함
  	  http://localhost(현재 내 컴퓨터의 주소):8888(내 컴퓨터의 서버의 포트 번호)/1_Servlet(context/어플리케이션 루트 = 시작점) -> 브라우저 주소창에 이 주소를 입력 = Tomcat 서버에 요청을 보냄
  	    각자 본인 컴퓨터에 구축해놓은 서버의 IP 주소(localhost = 127.0.0.1)를 요청 + 서버의 포트 번호(8888) + 서버 내 구동 중인 context root 지정(1_Servlet)
	  127.0.0.1(loop back ip, 나 자신/내 컴퓨터의 주소)라는 ip를 localhost로 쓰겠다고 내 운영체제 상 host(개인 컴퓨터 하나하나? 2021.12.30(목) 9h25 강사님 설명 제대로 필기 못함)라는 file에 운영체제의 전역변수로써 설정되어있음 cf. 실제 많은 가정에서 공유기를 사용하고 있는 바, nat(?)로 나눠진 공용/동적(공유기 껐다 켤 때마다 바뀜) ip를 받음 -> 192.168.1.xx와 같은 ip 주소 많음
  	     서버 1개에 어플리케이션 여러 개 올릴 수 있으며, 다른 context root로 구분 + 각 context root별  welcome page 보여줌 e.g. http://localhost:8888(내 컴퓨터의 서버 포트 번호)/2_JSP
  	     
  	     가상의 논리적인 포트(숫자) vs 물리적인 포트(랜 포트 후면) -> 요청/패키지가 왔을 때 어떤 서비스/무엇 관련인지?
 	     실제 서비스에 사용되는 well-known ports(1~1023)는 사용하면 안 됨
  	     나의 질문 = 프로젝트마다 포트번호를 다르게 설정하는 것인가요?-->
  
  <welcome-file-list>
    <welcome-file>index.html</welcome-file> <!--나는 이 welcome file을 만들기로 함 -> 이하 파일 목록은 삭제해도 됨-->
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
</web-app>